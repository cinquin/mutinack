#!/usr/bin/env bash
set -e
set -o pipefail

#Compare JSONS in files whose paths are given by two arguments passed to the function
#If the contents differ, print a diff to stdout and save it to file "error"
#See http://stackoverflow.com/questions/31930041/using-jq-or-alternative-command-line-tools-to-diff-json-files/31935351
compare_jsons () {
  same=`./jq --argfile a $1 --argfile b $2 -n 'def post_recurse(f): def r: (f | select(. != null) | r), .; r; def post_recurse: post_recurse(.[]?); ($a | (post_recurse | arrays) |= sort) as $a | ($b| (post_recurse | arrays) |= sort) as $b | $a == $b'`
  [[ ${same} == "true" ]] || (echo "jq diff of $1 and $2" > error && (diff -u  <(./jq -S . $1 ) <(./jq -S . $2) | tee -a error) && false)
}

extract_json() {
  ./jq --slurp --raw-output "map(.samples) | .[] | map(.stats) | flatten $1 | map({name} + {candidates: .detections[\"chrX:11,857,475\"].disagreements})" $2 > $3
}

extract_json "| map(select(.analysisParameters.randomizeStrand == true))" stats.json filtered.json
#Uncomment line below to check that error is generated if JSON objects differ
#echo '[{"blah": 0}]' >> filtered.json
compare_jsons filtered.json no_disagreements.json_preserve

extract_json "| map(select(.analysisParameters.randomizeStrand == false))" stats.json filtered.json
compare_jsons filtered.json deletion_disagreement.json_preserve

touch run.out.check custom_check
