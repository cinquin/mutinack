<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="SequenceAnalysis" xmlns:jacoco="antlib:org.jacoco.ant">
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="lib_build_run_test/org.jacoco.ant-0.7.5.201505241946.jar:lib_build_run_test/org.jacoco.core-0.7.5.201505241946.jar:lib_build_run_test/org.jacoco.report-0.7.5.201505241946.jar:lib_build_run_test/org.jacoco.agent-0.7.5.201505241946.jar:lib_build_run_test/asm-debug-all-5.0.4.jar"/>
    </taskdef>

    <target name="jacoco:report">
        <jacoco:report>
            <executiondata>
                <file file="target/jacoco.exec"/>
            </executiondata>
            <structure name="Mutinack">
                <classfiles>
                    <fileset dir="bin">
                        <exclude name="**/picard/**"/>
                        <exclude name="**/samtools/**"/>
                        <exclude name="**/PosByPosNumbersPB*"/>
                    </fileset>
                </classfiles>
                <sourcefiles encoding="UTF-8">
                    <fileset dir="src"/>
                </sourcefiles>
            </structure>
            <html destdir="target/site/jacoco"/>
        </jacoco:report>
    </target>

    <property name="jmh.jar" location="lib_build_run_test/jmh-core-1.20-SNAPSHOT.jar"/>
    <property name="jmh-generator-annprocess.jar" location="lib_build_run_test/jmh-generator-annprocess-1.20-SNAPSHOT.jar"/>

    <property name="build.compiler" value="extJavac"/>
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <import file="build-user.xml"/>
    <path id="SequenceAnalysis.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/jcommander-1.33-SNAPSHOT.jar"/>
        <pathelement location="lib/org.eclipse.jdt.annotation_2.0.0.v20131221-0104_beta_java8.jar"/>
        <pathelement location="lib_build_run_test/junit-4.12.jar"/>
        <pathelement location="lib/trove.jar"/>
        <pathelement location="lib/eclipse-collections-8.2.0-SNAPSHOT.jar"/>
        <pathelement location="lib/eclipse-collections-api-8.2.0-SNAPSHOT.jar"/>
        <pathelement location="lib/bzip2.jar"/>
        <pathelement location="lib/snappy-java-1.0.3-rc3.jar"/>
        <pathelement location="lib_build_run_test/hamcrest-core-1.3.jar"/>
	<pathelement location="lib/slf4j-api-1.7.7.jar"/>
	<pathelement location="lib/logback-core-1.1.3.jar"/>
	<pathelement location="lib/logback-classic-1.1.3.jar"/>
	<pathelement location="lib/protobuf-java-2.4.1_PATCHED.jar"/>
        <pathelement location="lib_build_run_test/equalsverifier-1.7.6.jar"/>
        <pathelement location="lib_build_run_test/jmockit-1.21.jar"/>
        <pathelement location="findbugs-3.0.1/lib/findbugs.jar"/>
        <pathelement location="lib/commons-io-2.4.jar"/>
        <pathelement location="lib_build_run_test/pitest-1.1.8.jar"/>
        <pathelement location="lib/jackson-core-2.7.0.jar"/>
        <pathelement location="lib/jackson-databind-2.7.0.jar"/>
        <pathelement location="lib/jackson-annotations-2.7.0.jar"/>
        <pathelement location="lib/fst-2.43-onejar.jar"/>
        <pathelement location="lib/rmiio-2.1.3-SNAPSHOT.jar"/>
        <pathelement location="lib/xchart-3.3.1-SNAPSHOT.jar"/>
        <pathelement location="${jmh.jar}"/>
        <pathelement location="${jmh-generator-annprocess.jar}"/>
        <pathelement location="lib_build_run_test/jdo-api-3.1.jar"/>
        <pathelement location="lib_build_run_test/javax.jdo-3.2.0-m7-SNAPSHOT.jar"/>
        <pathelement location="lib_build_run_test/javax.persistence-2.2.0-m2-SNAPSHOT.jar"/>
        <pathelement location="lib_build_run_test/datanucleus-api-jdo-5.0.6-SNAPSHOT.jar"/>
        <pathelement location="lib_build_run_test/datanucleus-core-5.0.7-SNAPSHOT.jar"/>
        <pathelement location="lib_build_run_test/datanucleus-rdbms-5.0.6-SNAPSHOT.jar"/>
        <pathelement location="lib_build_run_test/final_annotation.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java*"/>
                <exclude name="contrib/net/sf/picard/vcf/"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
        <delete dir="{junit.output.dir}" failonerror="false"/>
        <delete file="target/jacoco.exec"/>
    </target>
    <target name="clean_main">
        <delete dir="bin/uk/org/cinquin"/>
        <delete dir="{junit.output.dir}" failonerror="false"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <path id="errorprone">
        <fileset dir="lib_build_run_test" includes="error_prone_ant*.jar"/>
    </path>
    <path id="final-annotation-processor">
        <fileset dir="." includes="final_annotation_processor.jar"/>
        <path refid="SequenceAnalysis.classpath"/>
    </path>
    <target depends="init" name="build-with-final-fields">
       <javac encoding="ISO-8859-1" debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
           <compilerarg value="-XDignore.symbol.file"/>
           <src path="src"/>
           <include name="uk/org/cinquin/**/*.java"/>
           <classpath refid="final-annotation-processor"/>
        </javac>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac encoding="ISO-8859-1" debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
           <compilerarg value="-XDignore.symbol.file"/>
           <compilerarg value="-parameters"/>
           <src path="src"/>
           <include name="contrib/edu/**/*.java"/>
           <include name="contrib/net/**/*.java"/>
           <include name="contrib/com/jcraft/**/*.java"/>
           <include name="**/*PB.java"/>
           <include name="contrib/jdk/**/*.java"/>
           <classpath refid="SequenceAnalysis.classpath"/>
           <compilerclasspath refid="errorprone"/>
        </javac>

        <javac compiler="com.google.errorprone.ErrorProneAntCompilerAdapter" encoding="ISO-8859-1" debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
           <compilerarg value="-XDignore.symbol.file"/>
           <compilerarg value="-parameters"/>
           <compilerarg value="-Xep:Finally:OFF"/>
           <compilerarg value="-Xep:StringSplitter:OFF"/>
           <compilerarg value="-Xep:CatchAndPrintStackTrace:OFF"/>
           <compilerarg value="-Xep:DefaultCharset:OFF"/>
           <compilerarg value="-XepDisableWarningsInGeneratedCode"/>
           <src path="src"/>
           <classpath refid="SequenceAnalysis.classpath"/>
           <compilerclasspath refid="errorprone"/>
        </javac>
    </target>
    <target name="UtilTest">
        <delete dir="{junit.output.dir}" failonerror="false"/>
        <mkdir dir="${junit.output.dir}"/>
        <jacoco:coverage destfile="target/jacoco.exec">
            <junit fork="yes" printsummary="withOutAndErr">
                <formatter type="xml"/>
                <test name="uk.org.cinquin.mutinack.misc_util.UtilTest" todir="${junit.output.dir}"/>
                <classpath refid="SequenceAnalysis.classpath"/>
            </junit>
        </jacoco:coverage>
    </target>
    <target name="FunctionalTests">
        <delete dir="{junit.output.dir}" failonerror="false"/>
        <mkdir dir="${junit.output.dir}"/>
        <jacoco:coverage destfile="target/jacoco.exec">
            <junit fork="yes" printsummary="withOutAndErr">
                <jvmarg value="-XX:CompileCommand=exclude,gnu.trove.impl.hash.TObjectHash::insertKey"/>
                <jvmarg value="-XX:CompileCommand=exclude,gnu.trove.impl.hash.TIntHash::insertKey"/>

                <formatter type="xml"/>
                <test name="uk.org.cinquin.mutinack.tests.FunctionalTestRerun" todir="${junit.output.dir}"/>
                <classpath refid="SequenceAnalysis.classpath"/>
            </junit>
        </jacoco:coverage>
    </target>
    <target name="SequenceAnalysis" depends="build">
        <mkdir dir="${junit.output.dir}"/>
        <parallel>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="contrib.nf.fr.eraasoft.pool.test.TestPool" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="uk.org.cinquin.mutinack.features.tests.BedReaderTest" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="uk.org.cinquin.mutinack.features.tests.GenomeIntervalTest" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="uk.org.cinquin.mutinack.misc_util.UtilTest" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="uk.org.cinquin.mutinack.statistics.CounterTest" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="uk.org.cinquin.mutinack.tests.TestEqualsHashcodeContracts" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                    <formatter type="xml"/>
                    <test name="uk.org.cinquin.mutinack.tests.TestEqualsHashcodeContractsParametrized" todir="${junit.output.dir}"/>
                    <classpath refid="SequenceAnalysis.classpath"/>
                </junit>
            </jacoco:coverage>
            <jacoco:coverage destfile="target/jacoco.exec">
                <junit fork="yes" printsummary="withOutAndErr">
                     <classpath refid="SequenceAnalysis.classpath"/>
                     <batchtest todir="${junit.output.dir}">
                         <fileset dir="bin/">
                             <include name="uk/org/cinquin/mutinack/tests/*Test.class" />
                         </fileset>
                     </batchtest>
                    <formatter type="xml"/>
                </junit>
            </jacoco:coverage>
        </parallel>
    </target>
    <target depends="SequenceAnalysis" name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
